for_window [all] border pixel 0

hide_edge_borders both
#Mod1 = Alt
#Mod2 = Num Lock
#Mod3 = Scroll Lock
#Mod4 = Super/Windows
#Mod4 = Super/Windows
#Shift = Shift
#Control = Control
#Mod5 = AltGr
#Space = space
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# Default orientation
default_orientation horizontal

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Noto Sans 9

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +2% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -2% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +2% && $refresh_i3status
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 2%- && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
bindsym Mod1+Ctrl+l exec alacritty

# start barve browser
bindsym Mod1+Ctrl+k exec brave

# kill focused window
bindsym $mod+q kill

# switch to next application
bindsym Mod1+Tab focus next

# switch to precious application
bindsym Mod1+Shift+Tab focus prev

# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop
bindsym Mod1+space exec --no-startup-id rofi -show combi
bindsym Control+Mod1+e exec --no-startup-id rofi -show emoji
bindsym Control+Mod1+c exec --no-startup-id rofi -show calc
bindsym Control+Mod1+w exec --no-startup-id ~/.config/rofi/scripts/wifimenu.sh
bindsym Control+Mod1+b exec --no-startup-id ~/.config/rofi/scripts/bluetoothmenu.sh

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Shift+s split h

# split in vertical orientation
bindsym $mod+Shift+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# ScreenShorts
bindsym Print exec --no-startup-id flameshot full
bindsym Shift+Print exec --no-startup-id flameshot gui

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1-"
set $ws2 "2-"
set $ws3 "3-"
set $ws4 "4-󰖣"
set $ws5 "5-"
set $ws6 "6-"
set $ws7 "7-"
set $ws8 "8-󰚾"
set $ws9 "9-󰚾"
set $ws10 "10-󰪴"

# switch to workspace
bindsym $mod+i exec --no-startup-id ~/.config/alacritty/auto_start.sh
bindsym $mod+o exec --no-startup-id ~/.config/BraveSoftware/auto_start.sh
bindsym $mod+p workspace number $ws3
bindsym $mod+n workspace number $ws4
bindsym $mod+m workspace number $ws5
bindsym $mod+Shift+i workspace number $ws6
bindsym $mod+Shift+o workspace number $ws7
bindsym $mod+Shift+p workspace number $ws8
bindsym $mod+Shift+n workspace number $ws9
bindsym $mod+Shift+m workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

bindsym $mod+Escape exec --no-startup-id ~/.config/i3/scripts/poweroff.sh

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#         status_command i3status
# }


# class                 border  bground text    indicator child_border
client.focused          #333333 #333333 #FFFFFF #484E50   #5F676A
client.focused_inactive #333333 #5F676A #FFFFFF #484E50   #5F676A
client.unfocused        #222222 #222222 #888888 #292D2E   #222222
client.urgent           #2F343A #900000 #FFFFFF #900000   #900000
client.placeholder      #000000 #0C0C0C #FFFFFF #000000   #0C0C0C

client.background       #000000

exec --no-startup-id picom
exec_always --no-startup-id feh --bg-scale ~/wallpaper/anime-girl-red-eye-tattoo-sword-4k-wallpaper-uhdpaper.com-310@0@j.jpg
exec_always xinput set-prop 13 "libinput Natural Scrolling Enabled" 1
exec_always xinput set-prop 13 "libinput Tapping Enabled" 1
# exec_always --no-startup-id killall polybar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh
exec --no-startup-id xrdb ~/.Xresources
exec --no-startup-id source ~/.profile

for_window [class="^((?!Alacritty|Brave-browser|Spotify|Whatsapp-for-linux|Signal|Gimp|obs|matplotlib|org.gnome.Nautilus|Xdg-desktop-portal-gtk|vlc).)*$"] move container to workspace $ws10, workspace $ws10
for_window [class="org.gnome.Nautilus"] floating enable, resize set 1500 800, move position center

# assign [class="Alacritty"] $ws1
for_window [workspace=$ws1 class="Alacritty"] move container to workspace $ws1, workspace $ws1
for_window [workspace=$ws2 class="Alacritty"] move container to workspace $ws1, workspace $ws1
for_window [workspace=$ws3 class="Alacritty"] move container to workspace $ws1, workspace $ws1
for_window [workspace=$ws4 class="Alacritty"] move container to workspace $ws1, workspace $ws1
for_window [workspace=$ws5 class="Alacritty"] move container to workspace $ws1, workspace $ws1
for_window [workspace=$ws6 class="Alacritty"] move container to workspace $ws1, workspace $ws1
for_window [workspace=$ws7 class="Alacritty"] move container to workspace $ws1, workspace $ws1
for_window [workspace=$ws8 class="Alacritty"] move container to workspace $ws1, workspace $ws1
for_window [workspace=$ws9 class="Alacritty"] move container to workspace $ws1, workspace $ws1
for_window [workspace=$ws10 class="Alacritty"] move container to workspace $ws10

# assign [class="Brave-browser"] $ws2
for_window [workspace=$ws1 class="Brave-browser"] move container to workspace $ws2, workspace $ws2
for_window [workspace=$ws2 class="Brave-browser"] move container to workspace $ws2, workspace $ws2
for_window [workspace=$ws3 class="Brave-browser"] move container to workspace $ws2, workspace $ws2
for_window [workspace=$ws4 class="Brave-browser"] move container to workspace $ws2, workspace $ws2
for_window [workspace=$ws5 class="Brave-browser"] move container to workspace $ws2, workspace $ws2
for_window [workspace=$ws6 class="Brave-browser"] move container to workspace $ws2, workspace $ws2
for_window [workspace=$ws7 class="Brave-browser"] move container to workspace $ws2, workspace $ws2
for_window [workspace=$ws8 class="Brave-browser"] move container to workspace $ws2, workspace $ws2
for_window [workspace=$ws9 class="Brave-browser"] move container to workspace $ws2, workspace $ws2
for_window [workspace=$ws10 class="Brave-browser"] move container to workspace $ws10

# assign [class="Spotify"] $ws3
for_window [workspace=$ws1 class="Spotify"] move container to workspace $ws3, workspace $ws3
for_window [workspace=$ws2 class="Spotify"] move container to workspace $ws3, workspace $ws3
for_window [workspace=$ws3 class="Spotify"] move container to workspace $ws3, workspace $ws3
for_window [workspace=$ws4 class="Spotify"] move container to workspace $ws3, workspace $ws3
for_window [workspace=$ws5 class="Spotify"] move container to workspace $ws3, workspace $ws3
for_window [workspace=$ws6 class="Spotify"] move container to workspace $ws3, workspace $ws3
for_window [workspace=$ws7 class="Spotify"] move container to workspace $ws3, workspace $ws3
for_window [workspace=$ws8 class="Spotify"] move container to workspace $ws3, workspace $ws3
for_window [workspace=$ws9 class="Spotify"] move container to workspace $ws3, workspace $ws3
for_window [workspace=$ws10 class="Spotify"] move container to workspace $ws10

# assign [class="Whatsapp-for-linux"] $ws4
for_window [workspace=$ws1 class="Whatsapp-for-linux"] move container to workspace $ws4, workspace $ws4
for_window [workspace=$ws2 class="Whatsapp-for-linux"] move container to workspace $ws4, workspace $ws4
for_window [workspace=$ws3 class="Whatsapp-for-linux"] move container to workspace $ws4, workspace $ws4
for_window [workspace=$ws4 class="Whatsapp-for-linux"] move container to workspace $ws4, workspace $ws4
for_window [workspace=$ws5 class="Whatsapp-for-linux"] move container to workspace $ws4, workspace $ws4
for_window [workspace=$ws6 class="Whatsapp-for-linux"] move container to workspace $ws4, workspace $ws4
for_window [workspace=$ws7 class="Whatsapp-for-linux"] move container to workspace $ws4, workspace $ws4
for_window [workspace=$ws8 class="Whatsapp-for-linux"] move container to workspace $ws4, workspace $ws4
for_window [workspace=$ws9 class="Whatsapp-for-linux"] move container to workspace $ws4, workspace $ws4
for_window [workspace=$ws10 class="Whatsapp-for-linux"] move container to workspace $ws10

# assign [class="Signal"] $ws5
for_window [workspace=$ws1 class="Signal"] move container to workspace $ws5, workspace $ws5
for_window [workspace=$ws2 class="Signal"] move container to workspace $ws5, workspace $ws5
for_window [workspace=$ws3 class="Signal"] move container to workspace $ws5, workspace $ws5
for_window [workspace=$ws4 class="Signal"] move container to workspace $ws5, workspace $ws5
for_window [workspace=$ws5 class="Signal"] move container to workspace $ws5, workspace $ws5
for_window [workspace=$ws6 class="Signal"] move container to workspace $ws5, workspace $ws5
for_window [workspace=$ws7 class="Signal"] move container to workspace $ws5, workspace $ws5
for_window [workspace=$ws8 class="Signal"] move container to workspace $ws5, workspace $ws5
for_window [workspace=$ws9 class="Signal"] move container to workspace $ws5, workspace $ws5
for_window [workspace=$ws10 class="Signal"] move container to workspace $ws10

# assign [class="Gimp"] $ws6
for_window [workspace=$ws1 class="Gimp"] move container to workspace $ws6, workspace $ws6
for_window [workspace=$ws2 class="Gimp"] move container to workspace $ws6, workspace $ws6
for_window [workspace=$ws3 class="Gimp"] move container to workspace $ws6, workspace $ws6
for_window [workspace=$ws4 class="Gimp"] move container to workspace $ws6, workspace $ws6
for_window [workspace=$ws5 class="Gimp"] move container to workspace $ws6, workspace $ws6
for_window [workspace=$ws6 class="Gimp"] move container to workspace $ws6, workspace $ws6
for_window [workspace=$ws7 class="Gimp"] move container to workspace $ws6, workspace $ws6
for_window [workspace=$ws8 class="Gimp"] move container to workspace $ws6, workspace $ws6
for_window [workspace=$ws9 class="Gimp"] move container to workspace $ws6, workspace $ws6
for_window [workspace=$ws10 class="Gimp"] move container to workspace $ws10

# assign [class="OBS"] $ws7
for_window [workspace=$ws1 class="obs"] move container to workspace $ws7, workspace $ws7
for_window [workspace=$ws2 class="obs"] move container to workspace $ws7, workspace $ws7
for_window [workspace=$ws3 class="obs"] move container to workspace $ws7, workspace $ws7
for_window [workspace=$ws4 class="obs"] move container to workspace $ws7, workspace $ws7
for_window [workspace=$ws5 class="obs"] move container to workspace $ws7, workspace $ws7
for_window [workspace=$ws6 class="obs"] move container to workspace $ws7, workspace $ws7
for_window [workspace=$ws7 class="obs"] move container to workspace $ws7, workspace $ws7
for_window [workspace=$ws8 class="obs"] move container to workspace $ws7, workspace $ws7
for_window [workspace=$ws9 class="obs"] move container to workspace $ws7, workspace $ws7
for_window [workspace=$ws10 class="obs"] move container to workspace $ws7, workspace $ws7

exec --no-startup-id sleep 4 && alacritty
exec --no-startup-id brave
exec --no-startup-id spotify
exec --no-startup-id whatsapp-for-linux
exec --no-startup-id signal-desktop

exec --no-startup-id i3-msg 'workspace $ws1'

# Automatically toggle split mode for new windows
exec_always --no-startup-id autotiling-rs
# exec_always --no-startup-id ~/.config/i3/scripts/alacritty_opener.sh

